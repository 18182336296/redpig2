<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redpigmall.dao.StoreGradeMapper">
	 
	
	<resultMap id="BaseResultMap" type="com.redpigmall.domain.StoreGrade">
		<result column="id" property="id" jdbcType="BIGINT"/>
		<result column="addTime" property="addTime" jdbcType="TIMESTAMP"/>
		<result column="deleteStatus" property="deleteStatus" jdbcType="INTEGER"/>
		<result column="gradeName" property="gradeName" jdbcType="VARCHAR"/>
		<result column="sysGrade" property="sysGrade" jdbcType="BIT"/>
		<result column="audit" property="audit" jdbcType="BIT"/>
		<result column="goodsCount" property="goodsCount" jdbcType="INTEGER"/>
		<result column="sequence" property="sequence" jdbcType="INTEGER"/>
		<result column="spaceSize" property="spaceSize" jdbcType="FLOAT"/>
		<result column="content" property="content" jdbcType="VARCHAR"/>
		<result column="price" property="price" jdbcType="VARCHAR"/>
		<result column="add_funciton" property="add_funciton" jdbcType="VARCHAR"/>
		<result column="templates" property="templates" jdbcType="VARCHAR"/>
		<result column="gradeLevel" property="gradeLevel" jdbcType="INTEGER"/>
		<result column="acount_num" property="acount_num" jdbcType="INTEGER"/>
		<result column="main_limit" property="main_limit" jdbcType="INTEGER"/>
		<result column="goods_audit" property="goods_audit" jdbcType="INTEGER"/>
		<result column="whether_free" property="whether_free" jdbcType="INTEGER"/>
		<collection property="stores" column="id" select="com.redpigmall.dao.StoreMapper.getGradeByStoreGradeId"/>
	</resultMap>
	<resultMap id="BaseResultMap2" type="com.redpigmall.domain.StoreGrade">
		<result column="id" property="id" jdbcType="BIGINT"/>
		<result column="addTime" property="addTime" jdbcType="TIMESTAMP"/>
		<result column="deleteStatus" property="deleteStatus" jdbcType="INTEGER"/>
		<result column="gradeName" property="gradeName" jdbcType="VARCHAR"/>
		<result column="sysGrade" property="sysGrade" jdbcType="BIT"/>
		<result column="audit" property="audit" jdbcType="BIT"/>
		<result column="goodsCount" property="goodsCount" jdbcType="INTEGER"/>
		<result column="sequence" property="sequence" jdbcType="INTEGER"/>
		<result column="spaceSize" property="spaceSize" jdbcType="FLOAT"/>
		<result column="content" property="content" jdbcType="VARCHAR"/>
		<result column="price" property="price" jdbcType="VARCHAR"/>
		<result column="add_funciton" property="add_funciton" jdbcType="VARCHAR"/>
		<result column="templates" property="templates" jdbcType="VARCHAR"/>
		<result column="gradeLevel" property="gradeLevel" jdbcType="INTEGER"/>
		<result column="acount_num" property="acount_num" jdbcType="INTEGER"/>
		<result column="main_limit" property="main_limit" jdbcType="INTEGER"/>
		<result column="goods_audit" property="goods_audit" jdbcType="INTEGER"/>
		<result column="whether_free" property="whether_free" jdbcType="INTEGER"/>
	</resultMap>
	<!--database table column names-->
	<sql id="Base_Column_List">
		id,addTime,deleteStatus,gradeName,sysGrade,audit,goodsCount,sequence,spaceSize,content,price,add_funciton,templates,gradeLevel,acount_num,main_limit,goods_audit,whether_free
	</sql>
	<sql id="whereStatement">
		<if test="id != null">and id = #{id,jdbcType=BIGINT}</if>
		<if test="addTime != null">and addTime = #{addTime,jdbcType=TIMESTAMP}</if>
		<if test="add_Time_more_than_equal != null">and addTime <![CDATA[ >= ]]> #{add_Time_more_than_equal,jdbcType=TIMESTAMP}</if>
		<if test="add_Time_less_than_equal != null">and addTime <![CDATA[ <= ]]> #{add_Time_less_than_equal,jdbcType=TIMESTAMP}</if>
		<if test="deleteStatus != null">and deleteStatus = #{deleteStatus,jdbcType=INTEGER}</if>
		<if test="gradeName != null">and gradeName = #{gradeName,jdbcType=VARCHAR}</if>
		<if test="gradeName_like != null">and gradeName like CONCAT('%',#{gradeName_like},'%') </if>
		<if test="sysGrade != null">and sysGrade = #{sysGrade,jdbcType=BIT}</if>
		<if test="audit != null">and audit = #{audit,jdbcType=BIT}</if>
		<if test="goodsCount != null">and goodsCount = #{goodsCount,jdbcType=INTEGER}</if>
		<if test="sequence != null">and sequence = #{sequence,jdbcType=INTEGER}</if>
		<if test="spaceSize != null">and spaceSize = #{spaceSize,jdbcType=FLOAT}</if>
		<if test="content != null">and content = #{content,jdbcType=VARCHAR}</if>
		<if test="price != null">and price = #{price,jdbcType=VARCHAR}</if>
		<if test="add_funciton != null">and add_funciton = #{add_funciton,jdbcType=VARCHAR}</if>
		<if test="templates != null">and templates = #{templates,jdbcType=VARCHAR}</if>
		<if test="gradeLevel != null">and gradeLevel = #{gradeLevel,jdbcType=INTEGER}</if>
		<if test="acount_num != null">and acount_num = #{acount_num,jdbcType=INTEGER}</if>
		<if test="main_limit != null">and main_limit = #{main_limit,jdbcType=INTEGER}</if>
		<if test="goods_audit != null">and goods_audit = #{goods_audit,jdbcType=INTEGER}</if>
		<if test="whether_free != null">and whether_free = #{whether_free,jdbcType=INTEGER}</if>
	</sql>
	<sql id="ifStatement">
		gradeName= #{gradeName},
		sysGrade= #{sysGrade},
		audit= #{audit},
		goodsCount= #{goodsCount},
		sequence= #{sequence},
		spaceSize= #{spaceSize},
		content= #{content},
		price= #{price},
		add_funciton= #{add_funciton},
		templates= #{templates},
		gradeLevel= #{gradeLevel},
		acount_num= #{acount_num},
		main_limit= #{main_limit},
		goods_audit= #{goods_audit},
		whether_free= #{whether_free},</sql>
	<select id="selectByPrimaryKey" resultType="com.redpigmall.domain.StoreGrade" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select 
		<include refid="Base_Column_List"/> 
		from redpigmall_storegrade 
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="queryPageList" resultType="com.redpigmall.domain.StoreGrade" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/> 
		from redpigmall_storegrade obj 
		where 1=1 
		<include refid="whereStatement"/> 
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		<if test="currentPage !=null and pageSize !=null"> 
				limit #{currentPage},#{pageSize} 
		</if>
	</select>
	<select id="selectCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from redpigmall_storegrade obj 
		where 1 = 1  
		<include refid="whereStatement"/> 
	</select>
	<select id="queryPages" resultType="com.redpigmall.domain.StoreGrade" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_storegrade obj 			
		<where>
			1=1
			<include refid="whereStatement"/>
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		</where>
		<if test="currentPage !=null and pageSize !=null">
			limit #{currentPage},#{pageSize} 
		</if>
	</select>
	<insert id="saveEntity" parameterType="com.redpigmall.domain.StoreGrade" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
	insert into redpigmall_storegrade(addTime,deleteStatus,gradeName,sysGrade,audit,goodsCount,sequence,spaceSize,content,price,add_funciton,templates,gradeLevel,acount_num,main_limit,goods_audit,whether_free)
	 values(#{addTime,jdbcType=TIMESTAMP},#{deleteStatus,jdbcType=INTEGER},#{gradeName,jdbcType=VARCHAR},#{sysGrade,jdbcType=BIT},#{audit,jdbcType=BIT},#{goodsCount,jdbcType=INTEGER},#{sequence,jdbcType=INTEGER},#{spaceSize,jdbcType=FLOAT},#{content,jdbcType=VARCHAR},#{price,jdbcType=VARCHAR},#{add_funciton,jdbcType=VARCHAR},#{templates,jdbcType=VARCHAR},#{gradeLevel,jdbcType=INTEGER},#{acount_num,jdbcType=INTEGER},#{main_limit,jdbcType=INTEGER},#{goods_audit,jdbcType=INTEGER},#{whether_free,jdbcType=INTEGER}
	)</insert>
	<update id="updateById" parameterType="com.redpigmall.domain.StoreGrade">
		update redpigmall_storegrade
		<set>
			<include refid="ifStatement"/>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<delete id="deleteById" parameterType="java.lang.Long">
			delete from redpigmall_storegrade where id=#{id,jdbcType=BIGINT}
	</delete>
	<delete id="batchDeleteByIds" parameterType="java.util.List">
		delete from redpigmall_storegrade where id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<select id="queryPagesWithNoRelations" resultType="com.redpigmall.domain.StoreGrade" resultMap="BaseResultMap2" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_storegrade obj 			
		<where>
			1=1
			<include refid="whereStatement"/>
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		</where>
		<if test="currentPage !=null and pageSize !=null">
			limit #{currentPage},#{pageSize} 
		</if>
	</select>
	<select id="queryPageListWithNoRelations" resultType="com.redpigmall.domain.StoreGrade" resultMap="BaseResultMap2" parameterType="map">
		select
		<include refid="Base_Column_List"/> 
		from redpigmall_storegrade obj 
		where 1=1 
		<include refid="whereStatement"/> 
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		<if test="currentPage !=null and pageSize !=null"> 
				limit #{currentPage},#{pageSize} 
		</if>
	</select>
	<select id="selectObjByProperty" resultType="com.redpigmall.domain.StoreGrade" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_storegrade
		where 1 = 1 
		<if test="operation_property != null and operation_symbol !=null and operation_value !=null">
				and ${operation_property} <![CDATA[ ${operation_symbol} ]]>#{operation_value}
		</if>
	</select>
	<delete id="batchDelete" parameterType="java.util.List">
		delete from redpigmall_storegrade where id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item.id}
		</foreach>
	</delete>
</mapper>
