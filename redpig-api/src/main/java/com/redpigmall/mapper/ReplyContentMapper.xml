<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redpigmall.dao.ReplyContentMapper">
	 
	
	<resultMap id="BaseResultMap" type="com.redpigmall.domain.ReplyContent">
		<result column="id" property="id" jdbcType="BIGINT"/>
		<result column="addTime" property="addTime" jdbcType="TIMESTAMP"/>
		<result column="deleteStatus" property="deleteStatus" jdbcType="INTEGER"/>
		<result column="author" property="author" jdbcType="VARCHAR"/>
		<result column="title" property="title" jdbcType="VARCHAR"/>
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="digest" property="digest" jdbcType="VARCHAR"/>
		<result column="sequence" property="sequence" jdbcType="INTEGER"/>
		<result column="content" property="content" jdbcType="VARCHAR"/>
		<result column="way" property="way" jdbcType="INTEGER"/>
		<result column="count" property="count" jdbcType="INTEGER"/>
		<result column="counter" property="counter" jdbcType="INTEGER"/>
		<association property="reply_content" column="reply_content_id" select="com.redpigmall.dao.VMenuMapper.selectByPrimaryKey"/>
		<association property="img" column="img_id" select="com.redpigmall.dao.AccessoryMapper.selectByPrimaryKey"/>
		<association property="img_1" column="img_1_id" select="com.redpigmall.dao.AccessoryMapper.selectByPrimaryKey"/>
		<collection property="reply_praise" column="id" select="com.redpigmall.dao.PraiseMapper.getPraiseInfoByReplyContentId"/>
	</resultMap>
	<resultMap id="BaseResultMap2" type="com.redpigmall.domain.ReplyContent">
		<result column="id" property="id" jdbcType="BIGINT"/>
		<result column="addTime" property="addTime" jdbcType="TIMESTAMP"/>
		<result column="deleteStatus" property="deleteStatus" jdbcType="INTEGER"/>
		<result column="author" property="author" jdbcType="VARCHAR"/>
		<result column="title" property="title" jdbcType="VARCHAR"/>
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="digest" property="digest" jdbcType="VARCHAR"/>
		<result column="sequence" property="sequence" jdbcType="INTEGER"/>
		<result column="content" property="content" jdbcType="VARCHAR"/>
		<result column="way" property="way" jdbcType="INTEGER"/>
		<result column="count" property="count" jdbcType="INTEGER"/>
		<result column="counter" property="counter" jdbcType="INTEGER"/>
	</resultMap>
	<!--database table column names-->
	<sql id="Base_Column_List">
		id,addTime,deleteStatus,reply_content_id,author,title,createTime,digest,sequence,content,way,img_id,count,counter,img_1_id
	</sql>
	<sql id="whereStatement">
		<if test="id != null">and id = #{id,jdbcType=BIGINT}</if>
		<if test="addTime != null">and addTime = #{addTime,jdbcType=TIMESTAMP}</if>
		<if test="add_Time_more_than_equal != null">and addTime <![CDATA[ >= ]]> #{add_Time_more_than_equal,jdbcType=TIMESTAMP}</if>
		<if test="add_Time_less_than_equal != null">and addTime <![CDATA[ <= ]]> #{add_Time_less_than_equal,jdbcType=TIMESTAMP}</if>
		<if test="deleteStatus != null">and deleteStatus = #{deleteStatus,jdbcType=INTEGER}</if>
		<if test="author != null">and author = #{author,jdbcType=VARCHAR}</if>
		<if test="title != null">and title = #{title,jdbcType=VARCHAR}</if>
		<if test="createTime != null">and createTime = #{createTime,jdbcType=TIMESTAMP}</if>
		<if test="digest != null">and digest = #{digest,jdbcType=VARCHAR}</if>
		<if test="sequence != null">and sequence = #{sequence,jdbcType=INTEGER}</if>
		<if test="content != null">and content = #{content,jdbcType=VARCHAR}</if>
		<if test="way != null">and way = #{way,jdbcType=INTEGER}</if>
		<if test="count != null">and count = #{count,jdbcType=INTEGER}</if>
		<if test="counter != null">and counter = #{counter,jdbcType=INTEGER}</if>
		<if test="beginTime !=null">and addTime <![CDATA[ >= ]]> #{beginTime,jdbcType=TIMESTAMP}  </if>
		<if test="endTime !=null">and addTime <![CDATA[ <= ]]> #{endTime,jdbcType=TIMESTAMP}  </if>
		<if test="title_like !=null">
			and title like concat(concat('%',#{title_like}),'%') 
		</if>
		<if test="reply_content_id != null">and reply_content_id = #{reply_content_id,jdbcType=BIGINT}</if>
		<if test="img_id != null">and img_id = #{img_id,jdbcType=BIGINT}</if>
		<if test="img_1_id != null">and img_1_id = #{img_1_id,jdbcType=BIGINT}</if>
	</sql>
	<sql id="ifStatement">
		<if test="reply_content == null or reply_content.id == null">reply_content_id = null,</if>
		<if test="reply_content != null and reply_content.id != null">reply_content_id = #{reply_content.id,jdbcType=BIGINT},</if>
		author= #{author},
		title= #{title},
		createTime= #{createTime},
		digest= #{digest},
		sequence= #{sequence},
		content= #{content},
		way= #{way},
		<if test="img != null and img.id != null">img_id = #{img.id,jdbcType=BIGINT},</if>
		<if test="img == null or img.id == null">img_id = null,</if>
		count= #{count},
		counter= #{counter},
		<if test="img_1 != null and img_1.id != null">img_1_id = #{img_1.id,jdbcType=BIGINT},</if>
		<if test="img_1 == null or img_1.id == null">img_1_id = null,</if>
	</sql>
	<select id="selectByPrimaryKey" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select 
		<include refid="Base_Column_List"/> 
		from redpigmall_replycontent 
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="queryPageList" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/> 
		from redpigmall_replycontent obj 
		where 1=1 
		<include refid="whereStatement"/> 
				order by obj.addTime desc
		<if test="currentPage !=null and pageSize !=null"> 
				limit #{currentPage},#{pageSize} 
			</if>
	</select>
	<select id="selectCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from redpigmall_replycontent obj 
		where 1 = 1  
		<include refid="whereStatement"/> 
	</select>
	<select id="getReplyContentByVMenuId" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_replycontent
		where
			reply_content_id = #{reply_content_id,jdbcType=BIGINT}
	</select>
	<select id="getImgByAccessoryId" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select 
		<include refid="Base_Column_List"/>
		from redpigmall_replycontent
		where
			img_id= #{img_id,jdbcType=BIGINT}
	</select>
	<select id="getImg1ByAccessoryId" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select 
		<include refid="Base_Column_List"/>
		from redpigmall_replycontent
		where
			img_1_id= #{img_1_id,jdbcType=BIGINT}
	</select>
	<select id="queryPages" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_replycontent obj 			
		<where>
			1=1
			<include refid="whereStatement"/>
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		</where>
		<if test="currentPage !=null and pageSize !=null">
			limit #{currentPage},#{pageSize} 
		</if>
	</select>
	<insert id="saveEntity" parameterType="com.redpigmall.domain.ReplyContent" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
	insert into redpigmall_replycontent(addTime,deleteStatus,author,title,createTime,digest,sequence,content,way,count,counter,reply_content_id,img_id,img_1_id)
	 values(#{addTime,jdbcType=TIMESTAMP},#{deleteStatus,jdbcType=INTEGER},#{author,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{digest,jdbcType=VARCHAR},#{sequence,jdbcType=INTEGER},#{content,jdbcType=VARCHAR},#{way,jdbcType=INTEGER},#{count,jdbcType=INTEGER},#{counter,jdbcType=INTEGER},#{reply_content.id,jdbcType=BIGINT},#{img.id,jdbcType=BIGINT},#{img_1.id,jdbcType=BIGINT}
	)</insert>
	<update id="updateById" parameterType="com.redpigmall.domain.ReplyContent">
		update redpigmall_replycontent
		<set>
			<include refid="ifStatement"/>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<delete id="deleteById" parameterType="java.lang.Long">
			delete from redpigmall_replycontent where id=#{id,jdbcType=BIGINT}
	</delete>
	<delete id="batchDeleteByIds" parameterType="java.util.List">
		delete from redpigmall_replycontent where id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<select id="queryPagesWithNoRelations" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap2" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_replycontent obj 			
		<where>
			1=1
			<include refid="whereStatement"/>
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		</where>
		<if test="currentPage !=null and pageSize !=null">
			limit #{currentPage},#{pageSize} 
		</if>
	</select>
	<select id="queryPageListWithNoRelations" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap2" parameterType="map">
		select
		<include refid="Base_Column_List"/> 
		from redpigmall_replycontent obj 
		where 1=1 
		<include refid="whereStatement"/> 
				order by obj.addTime desc
		<if test="currentPage !=null and pageSize !=null"> 
				limit #{currentPage},#{pageSize} 
			</if>
	</select>
	<select id="selectObjByProperty" resultType="com.redpigmall.domain.ReplyContent" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_replycontent
		where 1 = 1 
		<if test="operation_property != null and operation_symbol !=null and operation_value !=null">
				and ${operation_property} <![CDATA[ ${operation_symbol} ]]>#{operation_value}
		</if>
	</select>
	<delete id="batchDelete" parameterType="java.util.List">
		delete from redpigmall_replycontent where id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item.id}
		</foreach>
	</delete>
</mapper>
