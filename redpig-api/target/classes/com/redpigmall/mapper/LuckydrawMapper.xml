<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redpigmall.dao.LuckydrawMapper">
    
	<resultMap id="BaseResultMap" type="com.redpigmall.domain.Luckydraw">
		<result column="id" property="id" jdbcType="BIGINT"/>
		<result column="addTime" property="addTime" jdbcType="TIMESTAMP"/>
		<result column="deleteStatus" property="deleteStatus" jdbcType="INTEGER"/>
		<result column="luckydraw_name" property="luckydraw_name" jdbcType="VARCHAR"/>
		<result column="beginTime" property="beginTime" jdbcType="TIMESTAMP"/>
		<result column="endTime" property="endTime" jdbcType="TIMESTAMP"/>
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="consume_integral" property="consume_integral" jdbcType="INTEGER"/>
		<result column="is_parti_reward" property="is_parti_reward" jdbcType="INTEGER"/>
		<result column="reward_integral" property="reward_integral" jdbcType="INTEGER"/>
		<result column="limit_number" property="limit_number" jdbcType="INTEGER"/>
		<result column="win_rate" property="win_rate" jdbcType="INTEGER"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
		<result column="notwin_remark" property="notwin_remark" jdbcType="VARCHAR"/>

		<association property="userLevel" column="user_level_id" select="com.redpigmall.dao.UserLevelMapper.selectByPrimaryKey"/>
	</resultMap>
	
	<resultMap id="BaseResultMap2" type="com.redpigmall.domain.Luckydraw">
		<result column="id" property="id" jdbcType="BIGINT"/>
		<result column="addTime" property="addTime" jdbcType="TIMESTAMP"/>
		<result column="deleteStatus" property="deleteStatus" jdbcType="INTEGER"/>
		<result column="luckydraw_name" property="luckydraw_name" jdbcType="VARCHAR"/>
		<result column="beginTime" property="beginTime" jdbcType="TIMESTAMP"/>
		<result column="endTime" property="endTime" jdbcType="TIMESTAMP"/>
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="consume_integral" property="consume_integral" jdbcType="INTEGER"/>
		<result column="reward_integral" property="reward_integral" jdbcType="INTEGER"/>
		<result column="is_parti_reward" property="is_parti_reward" jdbcType="INTEGER"/>
		<result column="limit_number" property="limit_number" jdbcType="INTEGER"/>
		<result column="win_rate" property="win_rate" jdbcType="INTEGER"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
		<result column="notwin_remark" property="notwin_remark" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!--database table column names-->
	<sql id="Base_Column_List">
		id,addTime,deleteStatus,luckydraw_name,beginTime,endTime,remark,consume_integral,reward_integral,
		is_parti_reward,limit_number,win_rate,status,notwin_remark,user_level_id
	</sql>
	<sql id="whereStatement">
		<if test="id != null">and id = #{id,jdbcType=BIGINT}</if>
		<if test="addTime != null">and addTime = #{addTime,jdbcType=TIMESTAMP}</if>
		<if test="add_Time_more_than_equal != null">and addTime <![CDATA[ >= ]]> #{add_Time_more_than_equal,jdbcType=TIMESTAMP}</if>
		<if test="add_Time_less_than_equal != null">and addTime <![CDATA[ <= ]]> #{add_Time_less_than_equal,jdbcType=TIMESTAMP}</if>
		<if test="deleteStatus != null">and deleteStatus = #{deleteStatus,jdbcType=INTEGER}</if>
		<if test="luckydraw_name != null">and luckydraw_name = #{luckydraw_name,jdbcType=VARCHAR}</if>
		<if test="luckydraw_name_like != null">and luckydraw_name like CONCAT('%',#{luckydraw_name_like},'%')</if>
		<if test="remark != null">and remark = #{remark,jdbcType=VARCHAR}</if>
		<if test="consume_integral != null">and consume_integral = #{consume_integral,jdbcType=INTEGER}</if>
		<if test="reward_integral != null">and reward_integral = #{reward_integral,jdbcType=INTEGER}</if>
		<if test="is_parti_reward != null">and remark = #{is_parti_reward,jdbcType=INTEGER}</if>
		<if test="limit_number != null">and limit_number = #{limit_number,jdbcType=INTEGER}</if>
		<if test="win_rate != null">and win_rate = #{win_rate,jdbcType=INTEGER}</if>
		<if test="status != null">and status = #{status,jdbcType=INTEGER}</if>
		<if test="notwin_remark != null">and notwin_remark = #{notwin_remark,jdbcType=VARCHAR}</if>

		<if test="beginTime != null">
			<![CDATA[ and beginTime < #{beginTime,jdbcType=TIMESTAMP} ]]>
		</if>
		
		<if test="endTime != null">
			<![CDATA[ and endTime > #{endTime,jdbcType=TIMESTAMP} ]]>
		</if>
		
		<if test="beginTime_more_than_equal != null">
			<![CDATA[ and beginTime <= #{beginTime_more_than_equal,jdbcType=TIMESTAMP} ]]>
		</if>
		
		<if test="endTime_less_than_equal != null">
			<![CDATA[ and endTime >= #{endTime_less_than_equal,jdbcType=TIMESTAMP} ]]>
		</if>

		<if test="user_level_id != null">and user_level_id = #{user_level_id,jdbcType=BIGINT}</if>
	</sql>
	
	<sql id="ifStatement">
		id= #{id},
		addTime = #{addTime},
		deleteStatus= #{deleteStatus},
		luckydraw_name= #{luckydraw_name},
		beginTime= #{beginTime},
		endTime= #{endTime},
		remark= #{remark},
		consume_integral= #{consume_integral},
		reward_integral= #{reward_integral},
		is_parti_reward= #{is_parti_reward},
		limit_number= #{limit_number},
		win_rate= #{win_rate},
		status= #{status},
		notwin_remark= #{notwin_remark},
		<if test="userLevel == null or userLevel.id == null">user_level_id = null,</if>
		<if test="userLevel != null and userLevel.id != null">user_level_id = #{userLevel.id,jdbcType=BIGINT},</if>
	</sql>
	
	<select id="selectByPrimaryKey" resultType="com.redpigmall.domain.Luckydraw" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select 
		<include refid="Base_Column_List"/> 
		from redpigmall_luckydraw
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<select id="queryPageList" resultType="com.redpigmall.domain.Luckydraw" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/> 
		from redpigmall_luckydraw obj 
		where 1=1 
		<include refid="whereStatement"/> 
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		<if test="currentPage !=null and pageSize !=null"> 
				limit #{currentPage},#{pageSize} 
		</if>
	</select>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from redpigmall_luckydraw obj 
		where 1 = 1  
		<include refid="whereStatement"/> 
	</select>
	
	<select id="queryPages" resultType="com.redpigmall.domain.Luckydraw" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_luckydraw obj 			
		<where>
			1=1
			<include refid="whereStatement"/>
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		</where>
		<if test="currentPage !=null and pageSize !=null">
			limit #{currentPage},#{pageSize} 
		</if>
	</select>
	
	<insert id="saveEntity" parameterType="com.redpigmall.domain.Luckydraw" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
	insert into redpigmall_luckydraw(addTime,deleteStatus,
		luckydraw_name,beginTime,endTime,remark,consume_integral,is_parti_reward,reward_integral,limit_number,win_rate,status,notwin_remark,user_level_id)
	 values(#{addTime,jdbcType=TIMESTAMP},#{deleteStatus,jdbcType=INTEGER},#{luckydraw_name,jdbcType=VARCHAR},
		#{beginTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR},#{consume_integral,jdbcType=INTEGER},
		#{is_parti_reward,jdbcType=INTEGER},
		#{reward_integral,jdbcType=INTEGER},
		 #{limit_number,jdbcType=VARCHAR},
		 #{win_rate,jdbcType=INTEGER},
		 #{status,jdbcType=INTEGER},
		 #{notwin_remark,jdbcType=VARCHAR},
		 #{userLevel.id,jdbcType=BIGINT}
	)</insert>
	
	<update id="updateById" parameterType="com.redpigmall.domain.Luckydraw">
		update redpigmall_luckydraw
		<set>
			<include refid="ifStatement"/>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<delete id="deleteById" parameterType="java.lang.Long">
			delete from redpigmall_luckydraw where id=#{id,jdbcType=BIGINT}
	</delete>
	
	<delete id="batchDeleteByIds" parameterType="java.util.List">
		delete from redpigmall_luckydraw where id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<select id="queryPagesWithNoRelations" resultType="com.redpigmall.domain.Luckydraw" resultMap="BaseResultMap2" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_luckydraw obj 			
		<where>
			1=1
			<include refid="whereStatement"/>
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		</where>
		<if test="currentPage !=null and pageSize !=null">
			limit #{currentPage},#{pageSize} 
		</if>
	</select>
	
	<select id="queryPageListWithNoRelations" resultType="com.redpigmall.domain.Luckydraw" resultMap="BaseResultMap2" parameterType="map">
		select
		<include refid="Base_Column_List"/> 
		from redpigmall_luckydraw obj 
		where 1=1 
		<include refid="whereStatement"/> 
			<choose>
				<when test="orderBy != null and orderType != null">
					order by ${orderBy} ${orderType}
				</when>
				<otherwise>
					order by obj.addTime desc
				</otherwise>
			</choose>
		<if test="currentPage !=null and pageSize !=null"> 
				limit #{currentPage},#{pageSize} 
		</if>
	</select>
	
	<select id="selectObjByProperty" resultType="com.redpigmall.domain.Luckydraw" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from redpigmall_luckydraw
		where 1 = 1 
		<if test="operation_property != null and operation_symbol !=null and operation_value !=null">
				and ${operation_property} <![CDATA[ ${operation_symbol} ]]>#{operation_value}
		</if>
	</select>
	
	<delete id="batchDelete" parameterType="java.util.List">
		delete from redpigmall_luckydraw where id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item.id}
		</foreach>
	</delete>
	
</mapper>
